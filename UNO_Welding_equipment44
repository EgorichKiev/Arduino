#include <PID_v1.h>
#include <PS2Keyboard.h>                            //work only on pin 2 and pin 3!!!! do not relokatte
#include <LiquidCrystal_PCF8574.h>
#include <Wire.h>
#include <RTClib.h>                                 //works only on i2C!!!
#include <SD.h>                                     //with 4Gb flash drive - approx. 1 190 000 protocols can be save to full memory card!!!!!!!!!!!
#include <SPI.h>                                     //SD card need all SPI pins!!!!
#include <EEPROM.h>
#include <Adafruit_NeoPixel.h>
#include <math.h>

#define SELECTOR 7
#define ENTER 8
#define CLOCK_PS 3
#define DATA_PS 4
#define TEMP A0
#define RES_VOLTAGE A1
#define BUZZER 5
#define VOLTAGE_CUR A3
#define LIGHT 10
#define POWER_OUT 16

#define BLACK_BOX_CURSOR lcd.print(char(255))
#define BLANK_LINE lcd.print(F("                    "))

#define BLACK strip.setPixelColor(0, 0, 0, 0)
#define RED strip.setPixelColor(0, 128, 0, 0)
#define GREEN strip.setPixelColor(0, 0, 128, 0)
#define BLUE strip.setPixelColor(0, 0, 0, 128)

PS2Keyboard keyboard;                                 //WARNING!!! FOR CORRECT READING OF BARCODE SCANER NEED CHANGE IN LIBRARY OF PS2KEYBOARD BUFFER_SIZE TO 64 FROM 45!!!!!
RTC_DS1307 rtc;

LiquidCrystal_PCF8574 lcd(0x27);  // set the LCD address to 0x27 for a 16 chars and 2 line display (3F)

File myFile;
Adafruit_NeoPixel strip = Adafruit_NeoPixel(1, LIGHT);

uint8_t o [33] = { 65, 160, 66, 161, 224, 69, 162, 163, 164, 165, 166, 75, 167, 77, 72, 79, 168, 80, 67, 84, 169, 170, 88, 225, 171, 172, 226, 173, 174, 196, 175, 176, 177 };
word page = 0;
char c;
word w = 0;
uint8_t x = 0;
uint8_t daY;
uint8_t  montH;
uint16_t  yeaR;
uint8_t  houR;
uint8_t  minutE;
uint16_t number = 0;

float voltage;
float res;
word timerWeld;

float u = 24.0;
int arrayBarcode [24];
word timeWeld = 10;
bool opinion;
uint32_t timer;
uint32_t timer2;
uint8_t counter;
char place [10];
char welder [10];

uint32_t stateOn;
uint32_t stateOff;
uint32_t stateOn2;
uint32_t stateOff2;
word nextSymbol;
word nextSymbol2;
word nextSymbol3;
bool timerSwitch1;
bool timerSwitch2;
bool timerSwitch3;
bool timerSwitch4;
bool timerSwitch5;
bool timerSwitch6;
bool timerSwitch7;
bool timerSwitch8;
bool timerSwitch9;
bool timerSwitch10;
bool timerSwitch11;
bool timerSwitch12;
bool language;


bool clickSymbol;
bool clickSymbol2;

float temperature = 0;
uint16_t r = 0;
float r2 = 0;
float r3 = 0;

word AC_LOAD = 9;    // Output to Opto Triac pin
word dimming = 4;  // Dimming level (0-128)  0 = ON, 128 = OFF
word dimming2;

double Setpoint, Input, Output;

double Kp = 2, Ki = 5, Kd = 1;                                  //Specify the links and initial tuning parameters
PID myPID(&Input, &Output, &Setpoint, Kp, Ki, Kd, DIRECT);

void softReset();

void setup() {

  SD.begin(6);

  pinMode(SELECTOR, INPUT_PULLUP);                //selector
  pinMode(ENTER, INPUT_PULLUP);                   //enter

  pinMode(TEMP, INPUT);                           // A0 to measure temperature OUTSIDE/INSIDE
  pinMode(RES_VOLTAGE, INPUT);                    //A1 to measure RESISTANCE/OUTPUT VOLTAGE
  pinMode(VOLTAGE_CUR, INPUT);                    //A3 to measure INPUT VOLTAGE/OUTPUT CURRENT

  pinMode(BUZZER, OUTPUT);                           //D10 to control FANS speed
  pinMode(POWER_OUT, OUTPUT);                     //D16 switch from external parameters measurement to internal, durring fusion process
  pinMode(LIGHT, OUTPUT);                         //D5 digital output to WS1280 rgb indicator

  keyboard.begin(DATA_PS, CLOCK_PS);                 //DataPin, IRQpin

  lcd.begin(20, 4);
  lcd.setBacklight(255);
  lcd.home();

  rtc.begin();

//  rtc.adjust(DateTime(2018, 9, 22, 0, 39, 0));                     //run load once sketch with new time, second upload need to be commented

  pinMode(AC_LOAD, OUTPUT);// Set AC Load pin as output
  attachInterrupt(0, light, FALLING);   // Choose the zero cross interrupt # from the table above

  Setpoint = 100;
  //turn the PID on
  myPID.SetMode(AUTOMATIC);
}

void light() {                        // функция управления яркостью
  if (page == 22) {
    if (dimming > 0 && dimming < 255) {         // утановим диммирование, если dim не5 равен 0 или 255
      delayMicroseconds(33 * (255 - dimming)); // вместо 33 былло 34, так между прочим. но если dim = 5 лампа припадошно мигает
      digitalWrite(AC_LOAD, HIGH);
      delayMicroseconds(500);
      digitalWrite(AC_LOAD, LOW);
    }
  }
}


void loop() {

  DateTime now = rtc.now();
  daY = (now.day());
  montH = (now.month());
  yeaR = (now.year());
  houR = (now.hour());
  minutE = (now.minute());

  switch (page) {

    case 0: {

        GREEN;
        strip.show();

        digitalWrite(POWER_OUT, 0);

        if (!digitalRead(SELECTOR)) {
          delay (500);
          language = !language;
        }

        if (!language) {
          if (!timerSwitch9) {
            lcd.setCursor(0, 0);
            BLANK_LINE;
            lcd.setCursor(0, 1);
            lcd.print(F("#P\251CCK\245\246             "));

            //"#РУССКИЙ            "

            lcd.setCursor(0, 2);
            lcd.print(F("#ENGLISH            "));

            //"#ENGLISH            "

            lcd.setCursor(0, 3);
            BLANK_LINE;
            timer = millis();
            timerSwitch9 = 1;
          } else {
            if ((millis() - timer) >= 400) {
              lcd.setCursor(1, 1);
              lcd.print(F("        "));
            }
            if ((millis() - timer) >= 800) {
              timerSwitch9 = !timerSwitch9;
            }
          }
        } else {
          if (!timerSwitch9) {
            lcd.setCursor(0, 0);
            BLANK_LINE;
            lcd.setCursor(0, 1);
            lcd.print(F("#P\251CCK\245\246             "));
            lcd.setCursor(0, 2);
            lcd.print(F("#ENGLISH            "));
            lcd.setCursor(0, 3);
            BLANK_LINE;
            timer = millis();
            timerSwitch9 = 1;
          } else {
            if ((millis() - timer) >= 400) {
              lcd.setCursor(1, 2);
              lcd.print(F("        "));
            }
            if ((millis() - timer) >= 800) {
              timerSwitch9 = !timerSwitch9;
            }
          }
        }

        if (!digitalRead(ENTER)) {
          delay (700);
          page = 1;
        }

      } break;

    case 1: {

        lcd.setCursor(0, 0);
        BLANK_LINE;
        lcd.setCursor(0, 1);
        (!language) ? lcd.print(F("   CBAPO\253H\245K v1.0   ")) : lcd.print(F("    Welder v1.0     ")) ;

        //"   СВАРОЧНИК v1.0   "
        //"    Welder v1.0     "

        lcd.setCursor(0, 2);
        (!language) ? lcd.print(F("   TECTOBA\261 CBAPKA  ")) : lcd.print(F("   Welcome to test  "));

        //"   ТЕСТОВАЯ СВАРКА  "
        //"   Welcome to test  "

        lcd.setCursor(0, 3);
        BLANK_LINE;
        delay (2000);
        page = 2;
      } break;

    case 2: {

        //insert check of input mains voltage!!

        if (!timerSwitch3) {
          timer = millis();
          timerSwitch3 = 1;
        }

        DateTime now = rtc.now();

        uint32_t readings = 0;
        for (int i = 0; i < 10; i++) {            // Make multiple measurements to take average from, avoiding large fluctuations
          readings += analogRead(TEMP);                         // Read the temperature sensor's output
          delay(50);
        }
        temperature = readings / 10;

        temperature = 1023 / temperature - 1;
        temperature = 985 / temperature;
        temperature = temperature / 1000;                                 // (R/Ro)
        temperature = log(temperature);                                   // ln(R/Ro)
        temperature /= 3950;                                              // 1/B * ln(R/Ro)
        temperature += 1.0 / (25 + 273.15);                               // + (1/To)
        temperature = 1.0 / temperature;                                  // инвертируем
        temperature -= 273.15;
        temperature += 3.6;


        lcd.setCursor(0, 0);
        (!language) ? lcd.print(F("\340ATA: ")) : lcd.print(F("Date: "));

        //"ДАТА: XX/XX/XXXX    "
        //"Date: XX/XX/XXXX    "

        if (now.day() < 10) {
          lcd.print(F("0"));
          lcd.print(now.day());
        } else {
          lcd.print(now.day());
        }
        lcd.print(F("/"));

        if (now.month() < 10) {
          lcd.print(F("0"));
          lcd.print(now.month());
        } else {
          lcd.print(now.month());
        }
        lcd.print(F("/"));
        lcd.print(now.year());
        lcd.print(F("    "));

        lcd.setCursor(0, 1);
        (!language) ? lcd.print(F("BPEM\261: ")) : lcd.print(F("Time:  "));

        //"ВРЕМЯ: XX:XX:XX     "
        //"Time:  XX:XX:XX     "

        if (now.hour() < 10) {
          lcd.print(F("0"));
          lcd.print(now.hour());
        } else {
          lcd.print(now.hour());
        }
        lcd.print(F(":"));

        if (now.minute() < 10) {
          lcd.print(F("0"));
          lcd.print(now.minute());
        } else {
          lcd.print(now.minute());
        }
        lcd.print(F(":"));

               if (now.second() < 10) {
                lcd.print(F("0"));
                } else {
                lcd.print(now.second());
               }
        lcd.print(F("     "));

        lcd.setCursor(0, 2);
        (!language) ? lcd.print(F("TEM\250EPAT\251PA:  ")) : lcd.print(F("Ambient temp: "));

        //"ТЕМПЕРАТУРА:  XX.X'С"
        //"Ambient temp: XX.X'C"

        lcd.print(temperature, 1);                          // Print temperature with single decimal
        lcd.print(char(223));
        lcd.print(F("C"));
        lcd.setCursor(0, 3);
        BLANK_LINE;

        if ((millis() - timer) >= 3000) {
          page = 3;
        }
      } break;

    case 3: {

        uint16_t readings2 = 0;
        for (int j = 0; j < 20; j++) {            // Make multiple measurements to take average from, avoiding large fluctuations
          readings2 += analogRead(RES_VOLTAGE);
          delay (50);
        }

        r = (readings2 / 20);

        if (!timerSwitch12) {
          switch (r) {

            case 35 ... 50: {
                r2 = 0.01140;
                delay (50);
                //        timerSwitch12 = 1;
              } break;

            case 51 ... 65: {
                r2 = 0.01155;
                delay (50);
                //       timerSwitch12 = 1;
              } break;

            case 66 ... 80: {
                r2 = 0.01175;
                delay (50);
                //         timerSwitch12 = 1;
              } break;

            case 81 ... 120: {
                r2 = 0.01195;
                delay (50);
                //        timerSwitch12 = 1;
              } break;

            case 121 ... 150: {
                r2 = 0.01225;
                delay (50);
                //          timerSwitch12 = 1;
              } break;

            case 151 ... 200: {
                r2 = 0.01272;
                delay (50);
                //           timerSwitch12 = 1;
              } break;

            case 201 ... 300: {
                r2 = 0.01325;
                delay (50);
                //         timerSwitch12 = 1;
              } break;

            case 301 ... 400: {
                r2 = 0.01495;
                delay (50);
                //        timerSwitch12 = 1;
              } break;

            case 401 ... 500: {
                r2 = 0.01625;
                delay (50);
                //          timerSwitch12 = 1;
              } break;

            case 501 ... 600: {
                r2 = 0.01755;
                delay (50);
                //         timerSwitch12 = 1;
              } break;

            case 601 ... 700: {
                r2 = 0.01885;
                delay (50);
                //           timerSwitch12 = 1;
              } break;

            case 701 ... 800: {
                r2 = 0.01955;
                delay (50);
                //          timerSwitch12 = 1;
              } break;

            case 801 ... 900: {
                r2 = 0.02055;
                delay (50);
                //          timerSwitch12 = 1;
              } break;

            case 901 ... 999: {
                r2 = 0.02155;
                delay (50);
                //           timerSwitch12 = 1;
              } break;
          }
        }

        if (r >= 0 && r < 35) {
          timerSwitch12 = 0;
          lcd.setCursor(0, 0);
          BLANK_LINE;
          lcd.setCursor(0, 1);
          (!language) ? lcd.print(F("   C\247\245\254KOM H\245\244KOE   ")) : lcd.print(F(" TOO LOW RESISTANCE "));

          //"   СЛИШКОМ НИЗКОЕ   "
          //" TOO LOW RESISTANCE "

          lcd.setCursor(0, 2);
          (!language) ? lcd.print(F("CO\250POT\245B\247EH\245E M\251\252T\256!")) : lcd.print(F("   OF COUPLER!      "));

          //"СОПРОТИВЛЕНИЕ МУФТЫ!"
          //"   OF COUPLER!      "

          lcd.setCursor(0, 3);
          BLANK_LINE;
        }

        if (r > 34 && r < 1000) {

          r3 = r2 * r;

          lcd.setCursor(0, 0);
          BLANK_LINE;
          lcd.setCursor(0, 1);
          (!language) ? lcd.print(F("   CO\250POT\245B\247EH\245E:   ")) : lcd.print(F("   RESISTANCE:      "));

          //"   CОПРОТИВЛЕНИЕ:   "
          //"   RESISTANCE:      "

          lcd.setCursor(0, 2);
          lcd.print(F("      "));
          lcd.print(r3, 2);
          (!language) ? lcd.print(F(" OM         ")) : lcd.print(F(" Ohm        "));

          //"      X.XX ОМ       "
          //"      X.XX Ohm      "

          if (!timerSwitch2) {
            lcd.setCursor(0, 3);
            lcd.print(F("        OK ?        "));

            //"        OK ?        "

            timer = millis();
            timerSwitch2 = 1;
          } else {
            if ((millis() - timer) >= 400) {
              lcd.setCursor(0, 3);
              lcd.print(F("                    "));
            }
            if ((millis() - timer) >= 800) {
              timerSwitch2 = !timerSwitch2;
            }
          }

          if (!digitalRead(ENTER)) {
            delay (500);
            page = 4;

          }
        }

        if (r > 999 && r <= 1023) {
          timerSwitch12 = 0;
          lcd.setCursor(0, 0);
          BLANK_LINE;
          lcd.setCursor(0, 1);
          (!language) ? lcd.print(F("    \250O\340K\247\260\253\245TE      ")) : lcd.print(F("     CONNECT        "));

          //"    ПОДКЛЮЧИТЕ      "
          //"     CONNECT        "

          lcd.setCursor(0, 2);
          (!language) ? lcd.print(F("      \252\245T\245H\241!       ")) : lcd.print(F("     COUPLER!       "));

          //"      ФИТИНГ!       "
          //"     COUPLER!       "

          lcd.setCursor(0, 3);
          BLANK_LINE;
        }

        //      r = (((readings2 / 20) / 0.91) / 100);
        //      r2 = map (r, 0.4, 7.8, 1.18, 7);
        //      r3 = (r - (r2 * 0.15)) * 2;

      } break;

    case 4: {
        // timerSwitch12 = 0;

        if (!timerSwitch6) {
          lcd.setCursor(0, 2);
          BLANK_LINE;
          timerSwitch6 = 1;
        }

        if (!digitalRead(ENTER)) {
          stateOn = (millis () - stateOff);
          switch (stateOn) {
            case  200 ... 400: {
                clickSymbol = 1;
                delay (500);
              }
              break;

            case 1000 ... 5000: {
                w = 0;
                delay(1000);
                page = 5;
              }
              break;
          }
        } else {
          if (clickSymbol) {
            (nextSymbol < 9) ? nextSymbol ++ : nextSymbol = 0;
          }
          clickSymbol = 0;
          stateOff = millis ();
        }

        lcd.setCursor(0, 0);
        (!language) ? lcd.print(F("BBE\340\245TE KO\340 O\240\304EKTA:")) : lcd.print(F("Enter WELDING PLACE:"));

        //"ВВЕДИТЕ КОД ОБЪЕКТА:"
        //"Enter WELDING PLACE:"

        lcd.setCursor(0, 1);
        BLANK_LINE;
        if (!digitalRead(SELECTOR)) {
          delay(150);
          (w < 32) ? w ++ : w = 0 ;
        }

        lcd.setCursor(0, 2);
        lcd.print(F("  ["));
        lcd.setCursor(3, 2);
        place [nextSymbol] = char(o[w]);
        lcd.print(place);
        lcd.print(F("]   "));

        lcd.setCursor(0, 3);
        BLANK_LINE;

      } break;

    case 5: {

        if (!digitalRead(ENTER)) {                                 //states of work of encoder button  - or control of work, or switch off the device
          stateOn2 = (millis () - stateOff2);
          switch (stateOn2) {
            case  200 ... 400: {
                clickSymbol2 = 1;
                delay (500);
              }
              break;

            case 1000 ... 5000: {
                w = 0;
                delay(1000);
                page = 6;
              }
              break;
          }
        } else {
          if (clickSymbol2) {
            (nextSymbol2 < 9) ? nextSymbol2 ++ : nextSymbol = 0;
          }
          clickSymbol2 = 0;
          stateOff2 = millis ();
        }

        lcd.setCursor(0, 0);
        (!language) ? lcd.print(F("   KO\340 O\250EPATOPA:   ")) : lcd.print(F("Enter WELDER NAME:  "));

        //"   КОД ОПЕРАТОРА:   "
        //"Enter WELDER NAME:  "

        lcd.setCursor(0, 1);
        BLANK_LINE;
        if (!digitalRead(SELECTOR)) {
          delay(150);
          (w < 32) ? w ++ : w = 0 ;
        }

        if (!timerSwitch7) {
          lcd.setCursor(7, 2);
          BLANK_LINE;
          timerSwitch7 = 1;
        }

        lcd.setCursor(0, 2);
        lcd.print(F("  ["));
        lcd.setCursor(3, 2);
        welder [nextSymbol2] = char(o[w]);
        lcd.print(welder);
        lcd.print(F("]   "));

        lcd.setCursor(0, 3);
        BLANK_LINE;

      } break;

    case 6: {

        if (!digitalRead(SELECTOR)) {
          delay (1000);
          opinion = !opinion;
        }

        if (!opinion) {
          if (!timerSwitch1) {
            lcd.setCursor(0, 0);
            (!language) ? lcd.print(F("   PE\243\245M PA\240OT\256:    ")) : lcd.print(F("     WORK MODE:     "));

            //"   РЕЖИМ РАБОТЫ:    "
            //"     WORK MODE:     "

            lcd.setCursor(0, 1);
            (!language) ? lcd.print(F("#ABTO (CKAHEP)      ")) : lcd.print(F("#AUTOMATED          "));

            //"#АВТО (СКАНЕР)       "
            //"#AUTOMATED           "

            lcd.setCursor(0, 2);
            (!language) ? lcd.print(F("#P\251\253HO\246             ")) : lcd.print(F("#MANUAL             "));

            //"#РУЧНОЙ              "
            //"#MANUAL              "

            lcd.setCursor(0, 3);
            BLANK_LINE;
            timer = millis();
            timerSwitch1 = 1;
          } else {
            if ((millis() - timer) >= 400) {
              lcd.setCursor(1, 1);
              lcd.print(F("             "));
            }
            if ((millis() - timer) >= 800) {
              timerSwitch1 = !timerSwitch1;
            }
          }
          if (!digitalRead(ENTER)) {
            delay (1000);
            page = 20;
          }
        } else {
          if (!timerSwitch1) {
            lcd.setCursor(0, 0);
            (!language) ? lcd.print(F("   PE\243\245M PA\240OT\256:    ")) : lcd.print(F("     WORK MODE:     "));
            lcd.setCursor(0, 1);
            (!language) ? lcd.print(F("#ABTO (CKAHEP)      ")) : lcd.print(F("#AUTOMATED          "));
            lcd.setCursor(0, 2);
            (!language) ? lcd.print(F("#P\251\253HO\246             ")) : lcd.print(F("#MANUAL             "));
            lcd.setCursor(0, 3);
            BLANK_LINE;
            timer = millis();
            timerSwitch1 = 1;
          } else {
            if ((millis() - timer) >= 400) {
              lcd.setCursor(1, 2);
              lcd.print(F("      "));
            }
            if ((millis() - timer) >= 800) {
              timerSwitch1 = !timerSwitch1;
            }
          }
          if (!digitalRead(ENTER)) {
            delay (1000);
            page = 7;
          }
        }
      } break;

    case 7: {

        lcd.setCursor(0, 0);
        (!language) ? lcd.print(F("BBE\340\245TE HA\250P\261\243EH\245E: ")) : lcd.print(F("Enter fusion voltage"));

        //"ВВЕДИТЕ НАПРЯЖЕНИЕ: "
        //"Enter fusion voltage"

        lcd.setCursor(0, 1);
        BLANK_LINE;
        if (!digitalRead(SELECTOR)) {
          delay(350);
          (u < 48) ? u += 0.5 : u = 12 ;
        }
        lcd.setCursor(0, 2);
        lcd.print(F("     U = "));
        lcd.print(u , 1);
        (!language) ? lcd.print(F(" B.    ")) : lcd.print(F(" Volts "));

        //"     U = XX.X В.    "
        //"     U = XX.X Volts "

        lcd.setCursor(0, 3);
        BLANK_LINE;
        if (!digitalRead(ENTER)) {
          delay (1000);
          page = 8;
        }
      } break;

    case 8: {

        lcd.setCursor(0, 0);
        (!language) ? lcd.print(F("BBE\340\245TE BPEM\261 CBAPK\245")) : lcd.print(F("Enter fusion time:  "));

        //"ВВЕДИТЕ ВРЕМЯ СВАРКИ"
        //"Enter fusion time:  "

        lcd.setCursor(0, 1);
        BLANK_LINE;
        if (!digitalRead(SELECTOR)) {
          delay(150);
          (timeWeld < 1500) ? timeWeld += 5 : timeWeld = 10 ;
        }
        lcd.setCursor(0, 2);
        (!language) ? lcd.print(F("  BPEM\261 = ")) : lcd.print(F("   time = "));
        lcd.print(timeWeld);
        (!language) ? lcd.print(F(" c.      ")) : lcd.print(F(" sec.    "));

        //"  ВРЕМЯ = ХХХХ с.   "
        //"   time = XXXX sec. "

        lcd.setCursor(0, 3);
        BLANK_LINE;

        if (!digitalRead(ENTER)) {
          delay (1000);
          page = 9;
        }
      } break;

    case 9: {               //check - time & voltage

        lcd.setCursor(0, 0);
        (!language) ? lcd.print(F("\250POBEPKA \250APAMETPOB:")) : lcd.print(F("Check welding param:"));

        //"ПРОВЕРКА ПАРАМЕТРОВ:"
        //"Check welding param:"

        lcd.setCursor(0, 1);
        (!language) ? lcd.print(F("  HA\250P\261\243EH\245E: ")) : lcd.print(F("Fusion Voltage "));
        lcd.print(u , 1);
        (!language) ? lcd.print(F(" B")) : lcd.print(F("V"));


        //"  НАПРЯЖЕНИЕ: XX.X В"
        //"Fusion Voltage XX.XV"


        lcd.setCursor(0, 2);
        (!language) ? lcd.print(F("BPEM\261 CBAPK\245:  ")) : lcd.print(F("Fusion time    "));
        lcd.print(timeWeld);
        (!language) ? lcd.print(F("c")) : lcd.print(F("s"));

        //"ВРЕМЯ СВАРКИ:  ХХХХс"
        //"Fusion time    XXXXs"

        if (!timerSwitch3) {
          lcd.setCursor(0, 3);
          lcd.print(F("        OK ?        "));

          //"        ОК ?        "

          timer = millis();
          timerSwitch3 = 1;
        } else {
          if ((millis() - timer) >= 400) {
            lcd.setCursor(0, 3);
            BLANK_LINE;
          }
          if ((millis() - timer) >= 800) {
            timerSwitch3 = !timerSwitch3;
          }
        }

        if (!digitalRead(ENTER)) {
          delay (1000);
          page = 10;
        }
      } break;

    case 10: {

        lcd.setCursor(0, 0);
        BLANK_LINE;
        lcd.setCursor(0, 1);
        (!language) ? lcd.print(F("     BH\245MAH\245E!      ")) : lcd.print(F("     WARNING!       "));

        //"     WARNING!       "
        //"     ВНИМАНИЕ!      "

        lcd.setCursor(0, 2);
        (!language) ? lcd.print(F("   HA\253A\247O CBAPK\245!   ")) : lcd.print(F("   Start Welding!   "));

        //"   НАЧАЛО СВАРКИ!   "
        //"   Start Welding!   "

        lcd.setCursor(0, 3);
        BLANK_LINE;
        delay (1000);
        page = 11;
      } break;

    case 11: {

        if ((millis() % 1000UL) < 400UL) {
          RED;
          strip.show();
          if ((millis() % 500UL) < 250UL) {
            if ((micros() % 30UL) < 15UL) {               //15mks pulse and 15mks pause for buzzer and 250ms duration instead of tone () function of arduino
              digitalWrite(BUZZER, 1) ;
            } else {
              digitalWrite(BUZZER, 0) ;
            }
          }
        } else {
          BLACK ;
          strip.show();
        }

        Input = analogRead(A1);
        myPID.Compute();
        //       analogWrite(PIN_OUTPUT, Output);

        digitalWrite(POWER_OUT, 1);

        if (!timerSwitch4) {
          timer = millis();
          lcd.setCursor(0, 3);
          BLACK_BOX_CURSOR; BLACK_BOX_CURSOR; BLACK_BOX_CURSOR; BLACK_BOX_CURSOR; BLACK_BOX_CURSOR;
          BLACK_BOX_CURSOR; BLACK_BOX_CURSOR; BLACK_BOX_CURSOR; BLACK_BOX_CURSOR; BLACK_BOX_CURSOR;
          BLACK_BOX_CURSOR; BLACK_BOX_CURSOR; BLACK_BOX_CURSOR; BLACK_BOX_CURSOR; BLACK_BOX_CURSOR;
          BLACK_BOX_CURSOR; BLACK_BOX_CURSOR; BLACK_BOX_CURSOR; BLACK_BOX_CURSOR; BLACK_BOX_CURSOR;

          // char (255) - black box or insert LcdBarGraph library
          lcd.setCursor(0, 2);
          BLANK_LINE;
          lcd.setCursor(0, 0);
          BLANK_LINE;
          lcd.setCursor(0, 1);
          BLANK_LINE;
          timerSwitch4 = 1;
        }

        timer2 = (timeWeld - ((millis() - timer) / 1000));

        lcd.setCursor(0, 0);
        (!language) ? lcd.print(F("O\250EPATOP: ")) : lcd.print(F("Operator: "));
        lcd.print(welder);

        //"Operator: XXXXXXXXXX"
        //"ОПЕРАТОР: XXXXXXXXXX"

        lcd.setCursor(0, 1);
        (!language) ? lcd.print(F(" O\240\304EKT : ")) : lcd.print(F("Location: "));
        lcd.print(place);

        //"Location: XXXXXXXXXX"
        //" ОБЪЕКТ : XXXXXXXXXX"

        lcd.setCursor(0, 2);
        (!language) ? lcd.print(F("BPEM\261 ")) : lcd.print(F("Time= "));
        lcd.print(timer2);
        (!language) ? lcd.print(F("c")) : lcd.print(F("s"));
        lcd.print(F(" U= "));
        lcd.print(analogRead(RES_VOLTAGE));
        (!language) ? lcd.print(F("B")) : lcd.print(F("V"));

        //"Time= 0000s U= 40.0V"
        //"ВРЕМЯ 0000с U= 40.0B"

        //insert fusion voltage on display
        //insert check and control inside temperature (back_end)
        //insert check and control output current (back_end)

        if (timer2 < 1000) {
          lcd.setCursor(19, 2);
          lcd.print(F(" "));
          if (timer2 < 100) {
            lcd.setCursor(18, 2);
            lcd.print(F(" "));
            if (timer2 < 10) {
              lcd.setCursor(17, 2);
              lcd.print(F(" "));
            }
          }
        }

        if (timeWeld > 15) {
          counter = ((timer2 * 20) / timeWeld);
          lcd.setCursor(counter, 3);
          lcd.print(F(" "));
        } else {
          counter = ((timer2 * 20) / timeWeld);
          lcd.setCursor(counter, 3);
          lcd.print(F("  "));
        }

        if (timer2 == 0) {
          page = 12;
        }

      } break;

    case 12: {

        GREEN;
        strip.show();
        digitalWrite(POWER_OUT, 0);

        lcd.setCursor(0, 0);
        BLANK_LINE;
        lcd.setCursor(0, 1);
        (!language) ? lcd.print(F("  CBAPKA OKOH\253EHA   ")) : lcd.print(F("    FUSION DONE     "));

        //"  СВАРКА ОКОНЧЕНА   "
        //"    FUSION DONE     "

        lcd.setCursor(0, 2);
        (!language) ? lcd.print(F("     O\254\245\240OK HET     ")) : lcd.print(F("     NO ERRORS      "));

        //"     ОШИБОК НЕТ     "
        //"     NO ERRORS      "

        lcd.setCursor(0, 3);
        BLANK_LINE;

        delay (2000);
        page = 13;
      } break;

    case 13: {

        BLUE;
        strip.show();
        lcd.setCursor(0, 0);
        BLANK_LINE;
        lcd.setCursor(0, 1);
        (!language) ? lcd.print(F("   \244A\250\245C\255 \250AM\261T\245    ")) : lcd.print(F("  Writting MEMORY   "));

        //"   ЗАПИСЬ ПАМЯТИ    "
        //"  Writting MEMORY   "

        lcd.setCursor(0, 2);
        (!language) ? lcd.print(F("     \250O\340O\243\340\245TE      ")) : lcd.print(F("   PLEASE WAIT!     "));

        //"     ПОДОЖДИТЕ      "
        //"   PLEASE WAIT!     "

        lcd.setCursor(0, 3);
        BLANK_LINE;

        delay (1000);
        page = 14;

      } break;

    case 14: {

        EEPROM.get (0, number);
        myFile = SD.open("welding.txt", FILE_WRITE);
        myFile.print(" ");
        if (number < 1000) {
          myFile.print(" ");
          if (number < 100) {
            myFile.print(" ");
            if (number < 10) {
              myFile.print(" ");
            }
          }
        }
        myFile.print(number);
        myFile.print(". ");

        if (daY < 10) {
          myFile.print("0");
          myFile.print(daY);
        } else {
          myFile.print(daY);
        }
        myFile.print("/");
        if (montH < 10) {
          myFile.print("0");
          myFile.print(montH);
        } else {
          myFile.print(montH);
        }
        myFile.print("/");
        myFile.print(yeaR);
        myFile.print(" ");

        if (houR < 10) {
          myFile.print("0");
          myFile.print(houR);
        } else {
          myFile.print(houR);
        }
        myFile.print(":");
        if (minutE < 10) {
          myFile.print("0");
          myFile.print(minutE);
        } else {
          myFile.print(minutE);
        }

        myFile.print(" ");
        myFile.print(temperature);
        myFile.print(" 'C");

        myFile.print(" [");
        myFile.print(place);
        if (nextSymbol < 9) {
          myFile.print(" ");
          if (nextSymbol < 8) {
            myFile.print(" ");
            if (nextSymbol < 7) {
              myFile.print(" ");
              if (nextSymbol < 6) {
                myFile.print(" ");
                if (nextSymbol < 5) {
                  myFile.print(" ");
                  if (nextSymbol < 4) {
                    myFile.print(" ");
                    if (nextSymbol < 3) {
                      myFile.print(" ");
                      if (nextSymbol < 2) {
                        myFile.print(" ");
                        if (nextSymbol < 1) {
                          myFile.print(" ");
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }

        myFile.print("] [");
        myFile.print(welder);
        if (nextSymbol2 < 9) {
          myFile.print(" ");
          if (nextSymbol2 < 8) {
            myFile.print(" ");
            if (nextSymbol2 < 7) {
              myFile.print(" ");
              if (nextSymbol2 < 6) {
                myFile.print(" ");
                if (nextSymbol2 < 5) {
                  myFile.print(" ");
                  if (nextSymbol2 < 4) {
                    myFile.print(" ");
                    if (nextSymbol2 < 3) {
                      myFile.print(" ");
                      if (nextSymbol2 < 2) {
                        myFile.print(" ");
                        if (nextSymbol2 < 1) {
                          myFile.print(" ");
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }

        myFile.print("] ");
        myFile.print(u);
        myFile.print(" Volts ");
        myFile.print(timeWeld);
        if (timeWeld < 1000) {
          myFile.print(" ");
          if (timeWeld < 100) {
            myFile.print(" ");
            if (timeWeld < 10) {
              myFile.print(" ");
            }
          }
        }
        myFile.print(" sec. ");
        myFile.print(r3);
        myFile.print(" Ohm ");
        if (opinion) {
          myFile.print(" MANUAL  ");
        } else {
          myFile.print(res);
          myFile.print(" Ohm ");
        }

        myFile.print("DONE");
        myFile.println();
        myFile.close();                             // close the file

        //" XXX1. 23/05/2018 10:44 22.10'C [XXXXXXXXXX] [XXXXXXXXXX] 40.0 Volts XX10 sec. 2.00 Ohm  MANUAL   DONE" output string in file on SD card
        //" XXX1. 23/05/2018 10:44 22.10'C [XXXXXXXXXX] [XXXXXXXXXX] 40.0 Volts XX10 sec. 2.00 Ohm 2.05 Ohm  DONE" output string in file on SD card

        number++;
        EEPROM.put (0, number);

        opinion = 0;
        c = 0;
        x = 0;
        res = 0;
        timerWeld = 0;
        voltage = 0;
        counter = 0;
        timerSwitch1 = 0;
        timerSwitch2 = 0;
        timerSwitch3 = 0;
        timerSwitch4 = 0;
        timerSwitch5 = 0;
        timerSwitch6 = 0;
        timerSwitch7 = 0;
        timerSwitch8 = 0;
        timerSwitch12 = 0;
        clickSymbol = 0;
        clickSymbol2 = 0;
        nextSymbol = 0;
        nextSymbol2 = 0;
        page = 15;
      } break;


    case 15: {
        softReset ();
      } break;

    case 20: {

        lcd.setCursor(0, 0);
        BLANK_LINE;
        lcd.setCursor(0, 1);
        (!language) ? lcd.print(F("     \250O\243A\247\251\246CTA     ")) : lcd.print(F("       PLEASE       "));

        //"     ПОЖАЛУЙСТА     "
        //"       PLEASE       "

        lcd.setCursor(0, 2);
        (!language) ? lcd.print(F("  OTCKAH\245P\251\246TE KO\340  ")) : lcd.print(F("    Scan BARCODE    "));

        //"  ОТСКАНИРУЙТЕ КОД  "
        //"    Scan BARCODE    "

        lcd.setCursor(0, 3);
        BLANK_LINE;

        if (keyboard.available()) {
          char c = keyboard.read();
          if (c == PS2_ENTER) {
            x = 0;
          } else {
            x++;
            if (x == 13) {
              voltage = ((c - 48) * 10);
            }
            if (x == 14) {
              voltage = ((c - 48) + voltage);
            }
            if (x == 15) {
              res = (c - 48);
            }
            if (x == 16) {
              res = (((c - 48) * 0.1) + res);
            }
            if (x == 17) {
              res = (((c - 48) * 0.01) + res);
            }
            if (x == 19) {
              timerWeld = ((c - 48) * 100);
            }
            if (x == 20) {
              timerWeld = (((c - 48) * 10) + timerWeld);
            }
            if (x == 21) {
              timerWeld = ((c - 48) + timerWeld);
            }
          }
        }

        if ((timerWeld > 0) && (voltage > 0)) {
          if ((timerWeld < 1500) && (voltage < 48)) {
            if (!timerSwitch5) {
              timer = millis();
              timerSwitch5 = 1;
            } else {
              if ((millis() - timer) >= 400) {
                page = 21;
              }
            }
          }
        }

      } break;

    case 21: {

        if (!timerSwitch8) {
          lcd.setCursor(0, 0);
          (!language) ? lcd.print(F("   \340AHH\256E CBAPK\245:   ")) : lcd.print(F("   Fusion Data:     "));

          //"   ДАННЫЕ СВАРКИ:   "
          //"   Fusion Data:     "

          lcd.setCursor(0, 1);
          (!language) ? lcd.print(F("HA\250P\261\243EH\245E ")) : lcd.print(F("Voltage =  "));
          lcd.print (voltage, 1);
          (!language) ? lcd.print(F(" B   ")) : lcd.print(F(" V   "));

          //"НАПРЯЖЕНИЕ ХХ.Х В   "
          //"Voltage =  XX.X V   "

          lcd.setCursor(0, 2);
          (!language) ? lcd.print(F("CO\250POT\245B\247EH\245E ")) : lcd.print(F("Resistance:"));
          lcd.print (res, 2);
          (!language) ? lcd.print(F("OM")) : lcd.print(F(" Ohm "));

          //"СОПРОТИВЛЕНИЕ Х.ХХОМ"
          //"Resistance:X.XX Ohm "

          lcd.setCursor(0, 3);
          (!language) ? lcd.print(F("BPEM\261:      ")) : lcd.print(F("Fusion time:"));
          lcd.print(timerWeld);
          (!language) ? lcd.print(F(" c     ")) : lcd.print(F(" sec"));

          //"ВРЕМЯ:       ХХХХ с "
          //"Fusion time:XXXX sec"

          timer = millis();
          timerSwitch8 = 1;
        } else {
          if ((millis() - timer) >= 1000) {
            lcd.setCursor(0, 0);
            BLANK_LINE;
            lcd.setCursor(0, 1);
            (!language) ? lcd.print(F("  \340AHH\256E BEPH\256?     ")) : lcd.print(F("     DATA OK?       "));

            //"  ДАННЫЕ ВЕРНЫ?     "
            //"     DATA OK?       "

            lcd.setCursor(0, 2);
            (!language) ? lcd.print(F(" \340A - HA\243M\245TE ENTER ")) : lcd.print(F("  OK - Press ENTER  "));

            //" ДА - НАЖМИТЕ ENTER "
            //"  OK - Press ENTER  "

            lcd.setCursor(0, 3);
            (!language) ? lcd.print(F("HET - HA\243M\245TE SELECT")) : lcd.print(F(" NOT - Press SELECT "));

            //"НЕТ - НАЖМИТЕ SELECT"
            //" NOT - Press SELECT "

          }
          if ((millis() - timer) >= 2000) {
            timerSwitch8 = !timerSwitch8;
          }
        }

        if (!digitalRead(SELECTOR)) {
          delay (600);
          timerSwitch5 = 0;
          timerSwitch8 = 0;
          c = 0;
          x = 0;
          res = 0;
          timerWeld = 0;
          voltage = 0;
          page = 20;
        }

        // вставить сравнение сопротивления измеренного и штрихкода!!!!

        if (!digitalRead(ENTER)) {
          delay (700);

          page = 23;
        }

      } break;

    case 22: {

        /*        if (!digitalRead(SELECTOR)) {
                  if (!timerSwitch10) {
                    timer = millis();
                    timerSwitch10 = 1;
                  } else {
                    timerSwitch11 = 0;
                    dimming  = 4;
                    if ((millis() - timer) >= 200) {
                      (dimming2 < 255) ? dimming2 ++ : dimming2 = 4 ;
                      timerSwitch10 = 0;
                    }
                  }
                }


                if (!digitalRead(ENTER)) {
                  timerSwitch11 = 1;
                }

                if (timerSwitch11) {
                  if (dimming < dimming2) {
                    dimming ++;
                  }
                }

                lcd.setCursor(0, 0);
                lcd.print(F("                    "));
                lcd.setCursor(0, 1);
                lcd.print(F(" Dimming set = ")) ;
                lcd.print(dimming2);
                lcd.print(F("  "));
                lcd.setCursor(0, 2);
                lcd.print(F(" Dimming = "));
                lcd.print(dimming);
                lcd.print(F("      "));
                lcd.setCursor(0, 3);
                lcd.print(F("                    "));

        */
      } break;

    case 23: {      //проверка соответствия штрихкода детали измеренному сопротивлению

        if ((r3 > (res * 0.9)) &&  (r3 < (res * 1.1))) {
          u = voltage;
          timeWeld = timerWeld;
          page = 10;
        } else {
          RED;
          strip.show();
          lcd.setCursor(0, 0);
          (!language) ? lcd.print(F(" BH\245MAH\245E, O\254\245\240KA!  ")) : lcd.print(F("      ERROR!        "));

          //" ВНИМАНИЕ, ОШИБКА!  "
          //"      ERROR!        "

          lcd.setCursor(0, 1);
          (!language) ? lcd.print(F("    \254TP\245XKO\340 HE      ")) : lcd.print(F("Scaned BARCODE didnt "));

          //"    ШТРИХКОД НЕ      "
          //"Scaned BARCODE didnt "

          lcd.setCursor(0, 2);
          (!language) ? lcd.print(F("COOTBETCTB\251ET M\251\252TE ")) : lcd.print(F(" match with COURLER "));

          //"СООТВЕТСТВУЕТ МУФТЕ "
          //" match with COURLER "

          lcd.setCursor(0, 3);
          (!language) ? lcd.print(F("   HA\243M\245TE ENTER     ")) : lcd.print(F("    Press ENTER      "));

          //"   НАЖМИТЕ ENTER     "
          //"    Press ENTER      "

          if (!digitalRead(ENTER)) {
            delay (500);
            opinion = 0;
            c = 0;
            x = 0;
            res = 0;
            timerWeld = 0;
            voltage = 0;
            counter = 0;
            timerSwitch1 = 0;
            timerSwitch2 = 0;
            timerSwitch3 = 0;
            timerSwitch4 = 0;
            timerSwitch5 = 0;
            timerSwitch6 = 0;
            timerSwitch7 = 0;
            timerSwitch8 = 0;
            timerSwitch12 = 0;
            clickSymbol = 0;
            clickSymbol2 = 0;
            nextSymbol = 0;
            nextSymbol2 = 0;
            softReset ();
          }
        }

      } break;

    case 24: {

      } break;

  }
}
void softReset () {
  asm volatile ("jmp 0");
}

